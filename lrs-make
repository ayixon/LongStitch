#!/usr/bin/make -f

# Input parameters
draft=draft
reads=reads

# Common parameters
cut=250
t=8

# Default Tigmint parameters
span=span

# Default ntJoin parameters
k=24
w=250
z=1000

# Default ARCS parameters
c=4
m=8-10000
s=70
l=4
a=0.3
D=false
time=0

.PHONY: all version help clean tigmint ntJoin tigmint-ntjoin ntJoin-with-tigmint tigmint-arcs arcs-with-tigmint ntJoin-arcs arcs-with-ntJoin tigmint-ntJoin-arcs arcs-with-tigmint-ntJoin
.DELETE_ON_ERROR:
.SECONDARY:

all: help
# Help
help:
	@echo "Usage: ./lrs-make [COMMAND] [OPTION=VALUE]â€¦"
	@echo "	Commands:"
	@echo ""
	@echo "	tigmint-ntJoin		run tigmint-long, then run ntJoin-long with the output of tigmint-long"
	@echo "	tigmint-arcs		run tigmint-long, then run arcs-long with the output of tigmint-long"
	@echo "	ntJoin-arcs		run ntJoin-long, then run arcs-long with the output of ntJoin-long"
	@echo "	tigmint-ntJoin-arcs	run tigmint-long, ntJoin-long, then arcs-long"
	@echo ""
	@echo "	General options:"
	@echo "	draft			draft name [draft]. File must have .fa extension"
	@echo "	reads			read name [reads]. File must have .fq.gz or .fa.gz extension"
	@echo ""
	@echo "	Tigmint-long options:"
	@echo "	span			min number of spanning molecules to be considered assembled"
	@echo ""
	@echo "	ntJoin-long options:"
	@echo ""
	@echo "	ARCS-long pipeline options:"
	@echo "	c			minimum aligned read pairs per molecule [4]"
	@echo "	m			multiplicity range [8-10000]"
	@echo "	D			enable distance estimation [false]"
	@echo "	l			minimum number of links to compute scaffold [4]"
	@echo "	a			maximum link ratio between two best contain pairs [0.3]"

# Run tigmint-long
tigmint-ntJoin-arcs: tigmint-ntJoin arcs-with-tigmint-ntjoin
tigmint-ntJoin: tigmint ntJoin-with-tigmint
tigmint-arcs: tigmint arcs-with-tigmint
tigmint: $(draft).cut$(cut).tigmint.fa

$(draft).cut$(cut).tigmint.fa: $(draft).fa $(reads).f*.gz
	tigmint-make tigmint-long draft=$(draft) reads=$(reads) span=$(span) cut=$(cut)

# Run ntJoin-long
ntJoin-with-tigmint: $(draft).cut$(cut).tigmint.fa.k$k.w$w.n$n.z$z.abyss-scaffolds.fa
ntJoin-arcs: ntJoin arcs-with-ntJoin
ntJoin: $(draft).fa.k$k.w$w.n$n.z$z.abyss-scaffolds.fa


%.tigmint.fa.k$k.w$w.n$n.z$z.abyss-scaffolds.fa: %.tigmint.fa $(reads).f*.gz
	ntJoin_long long target=$< reads="$(word 2,$^)" t=$t k=$k w=$w all_scaffolders

$(draft).fa.k$k.w$w.n$n.z$z.abyss-scaffolds.fa: $(draft).fa $(reads).f*.gz
	ntJoin_long long target=$< reads="$(word 2,$^)" t=$t k=$k w=$w all_scaffolders

# Run arcs-long
arcs-with-ntJoin: $(draft).fa.k$k.w$w.n$n.z$z.abyss-scaffolds_c$c_m$m_cut$cut_s$s_r$r_e$e_z$z_l$l_a$a.scaffolds.fa
arcs-with-tigmint: $(draft).cut$(cut).tigmint_c$c_m$m_cut$cut_s$s_r$r_e$e_z$z_l$l_a$a.scaffolds.fa
arcs-with-tigmint-ntjoin: $(draft).cut$(cut).tigmint.fa.k$k.w$w.n$n.z$z.abyss-scaffolds_c$c_m$m_cut$cut_s$s_r$r_e$e_z$z_l$l_a$a.scaffolds.fa

$(draft).fa.k$k.w$w.n$n.z$z.abyss-scaffolds_c$c_m$m_cut$cut_s$s_r$r_e$e_z$z_l$l_a$a.scaffolds.fa: $(draft).fa.k$k.w$w.n$n.z$z.abyss-scaffolds.fa $(reads).f*.gz
	arcs-make arcs-long draft=$(draft).fa.k$k.w$w.n$n.z$z.abyss-scaffolds reads=$(reads) m=$m cut=$(cut) s=$s l=$l c=$c a=$a D=$D time=$(time)

%.tigmint_c$c_m$m_cut$cut_s$s_r$r_e$e_z$z_l$l_a$a.scaffolds.fa: %.tigmint.fa $(reads).f*.gz
	arcs-make arcs-long draft=$(draft).cut$(cut).tigmint reads=$(reads) m=$m cut=$(cut) s=$s l=$l c=$c a=$a D=$D time=$(time)

%.tigmint.fa.k$k.w$w.n$n.z$z.abyss-scaffolds_c$c_m$m_cut$cut_s$s_r$r_e$e_z$z_l$l_a$a.scaffolds.fa: %.tigmint.fa.k$k.w$w.n$n.z$z.abyss-scaffolds.fa $(reads).f*.gz
	arcs-make arcs-long draft=$(draft).cut$(cut).tigmint.fa.k$k.w$w.n$n.z$z.abyss-scaffolds reads=$(reads) m=$m cut=$(cut) s=$s l=$l c=$c a=$a D=$D time=$(time)
